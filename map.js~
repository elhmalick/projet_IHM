



/* global google */

var map;
var markers = []
//call by google for map creation
function initMap() {
    getLocation(printMap)
}

//print map centred on user
function printMap(position)
{
    // default if geoloc not supported
    var lat = position.coords.latitude || 45.15
    var lng = position.coords.longitude || 5.5
    var position = {lat: lat, lng: lng}

//print map
    map = new google.maps.Map(document.getElementById('map'), {
        center: position,
        zoom: 13
    });
//print user position
    var h_icon = "./h_icon.png"
    var home = new google.maps.Marker({
        position: position,
        map: map,
        title: 'vous etes ici',
        icon: h_icon
    });

// get places

    getPlaces(position, printPlaces)



}


//get location if possible
function getLocation(cb) {
    var info = document.getElementById("info")
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(cb);
    } else {
        info.innerHTML = "Geolocation is not supported by this browser.";
        cb()
    }
}

// not implemented
function getPlaces(position,rayon, cb )
{


      // Specify location, radius and place types for your Places API search.
  var request = {
    location: position,
    radius: rayon,
    types: ['store']
  };
     var service = new google.maps.places.PlacesService(map);
    service.nearbySearch(request, function(result,status){
	var places = [];
	 if (status === google.maps.places.PlacesServiceStatus.OK) {
    		for (var i = 0; i < results.length; i++) {
      			places[places.lenght]={name:results[i].name,position:results[i].geometry.location,description:"",type:"Restaurant"}
           }
	   	
	   cb(places)
         }
	});

}
//print a list of places
function printPlaces(places)
{
    for (var i in places)
    {
        printPlace(places[i], +i + 1)
    }
}

//print a place
function printPlace(place, num)
{
    var list = document.getElementById("list")

    var marker = new google.maps.Marker({
        position: place.position,
        map: map,
        title: place.name,
        label: String(num)
    });

    markers[num] = marker


    var infowindow = new google.maps.InfoWindow({
        content: "<div > <h2> " + place.type + "</h2> <p>" + place.description + "</p> </div>"

    });
    list.innerHTML += "<div class=\"place-info\" onmouseover=\"bounce(" + num + ")\" onmouseout=\"stopBounce(" + num + ")\" ><h2> " + num + " : " + place.name + "</h2> <h3> " + place.type + "</h3> <p>" + place.description + "</p> </div>"


    marker.addListener('click', function () {
        infowindow.open(map, marker);
    });

}

function bounce(num)
{

    markers[num].setAnimation(google.maps.Animation.BOUNCE)
}

function stopBounce(num)
{

    markers[num].setAnimation(null)
}
